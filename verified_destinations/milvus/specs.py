# generated by datamodel-codegen:
#   filename:  specs.yml
#   timestamp: 2024-05-30T11:56:51+00:00

from __future__ import annotations

from typing import Optional, Union, Literal

from pydantic import BaseModel, Field
from dat_core.pydantic_models import ConnectionSpecification


class NoAuthentication(BaseModel):
    authentication: str = Field(
        'no_authentication',
        json_schema_extra={
            'ui-opts': {
                'hidden': True,
            }
        }
    )


class BasicAuthentication(BaseModel):
    authentication: str = Field(
        'basic_authentication',
        json_schema_extra={
            'ui-opts': {
                'hidden': True,
            }
        }
    )
    username: str = Field(
        ..., description='Username for the Milvus Database', title='Username'
    )
    password: str = Field(
        ..., description='Password for the Milvus Database', title='Password'
    )

class APITokenAuthentication(BaseModel):
    authentication: str = Field(
        'token_authentication',
        json_schema_extra={
            'ui-opts': {
                'hidden': True,
            }
        }
    )
    token: str = Field(
        ..., description='API Token for the Milvus Database', title='API Token'
    )

class MilvusConnection(ConnectionSpecification):
    uri: str = Field(...,
                     description='URI to connect to the Database', title='URI')
    collection_name: str = Field(
        ..., description='Name of the collection in the Database', title='Collection Name'
    )
    embedding_dimensions: int = Field(
        ..., description='Dimension of the embeddings', title='Embedding Dimensions'
    )
    authentication: Union[
        NoAuthentication,
        BasicAuthentication,
        APITokenAuthentication
    ] = Field(...,
              description='Authentication method to use',
              title='Authentication',
              json_schema_extra={
                  'ui-opts': {
                      'widget': 'singleDropdown',
                  }
              }
    )


class MilvusSpecification(BaseModel):
    name: Literal['Milvus']
    module_name: Literal['milvus']
    documentation_url: Optional[str] = (
        'https://datlabs.gitbook.io/datlabs/integrations/destinations/milvus'
    )
    connection_specification: MilvusConnection = Field(
        ...,
        description='connection_specification specific blob. Must be a valid JSON string.',
    )
